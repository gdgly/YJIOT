C51 COMPILER V9.52.0.0   PWM                                                               09/26/2017 14:59:30 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\PWM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\PWM\PWM.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USER\IIC;.\USER\U
                    -ART;.\USER\TM1618;.\USER\Sensor;.\USER;.\USER\PWM;.\USER\DC_MOTOR;.\USER\timer;.\USER\inc;.\USER\EXINT;.\USER\touch_key;
                    -.\USER\SYS_RUN;.\USER\step_motor;.\USER\BUZZER;.\USER\UART;.\USER\common;.\USER\lib;.\USER\UV;.\USER\ION;.\USER\EEPROM;.
                    -\USER\TM1620;.\USER\charge) DEBUG OBJECTEXTEND PRINT(.\Listings\PWM.lst) TABS(2) OBJECT(.\Objects\PWM.obj)

line level    source

   1          #include "OB39R16A6.h"
   2          #include "PWM.h"
   3          #include "intrins.h"
   4          
   5          
   6          
   7          
   8          //=============================================================================================
   9          //
  10          //=============================================================================================
  11          void PWM_Init(void)
  12          {
  13   1          _push_(PAGESEL);
  14   1          PAGESEL     = PAGE_1;
  15   1          //PWMEN       = (PWM7 | PWM6 | PWM5 | PWM4 );
  16   1          PWMEN       &= ~(PWM7 | PWM6 | PWM5 | PWM4 );
  17   1          //PWMEN       = (PWM7);
  18   1          PWMTBC0     = (PWMTB_PRESCALE );
  19   1          PWMOPMOD    = (PWMOP3MOD | PWMOP2MOD);
  20   1          //PWMPOLARITY = (POLARITY7 | POLARITY6 | POLARITY5 | POLARITY4);
  21   1          PERIODH     = PWM_PERIOD / 256 ;
  22   1          PERIODL     = PWM_PERIOD % 256 ;
  23   1          PWMTBC1     = (0x90 | PWM_INTERRUPT);
  24   1          DUTY2L  = 0;
  25   1          DUTY2H  = 0;
  26   1          DUTY3L  = 0;
  27   1          DUTY3H  = 0;
  28   1          _pop_(PAGESEL);
  29   1      }
  30          
  31          void PWM_Control(unsigned char pwm_num,unsigned char on_off)
  32          {
  33   1          _push_(PAGESEL);
  34   1          PAGESEL     = PAGE_1;
  35   1        
  36   1          if(on_off == PWM_OFF)
  37   1          {
  38   2              PWMEN &= ~(1 << pwm_num);
  39   2          }
  40   1          else if(on_off == PWM_ON)
  41   1          {
  42   2              PWMEN |= (1 << pwm_num);
  43   2          }
  44   1          
  45   1          _pop_(PAGESEL);
  46   1      
  47   1      }
  48          
  49          void PWM_Set_Duty(unsigned char pwm_num,unsigned int duty)
  50          {
  51   1          if(duty > PWM_MAX_DUTY)
  52   1          {
C51 COMPILER V9.52.0.0   PWM                                                               09/26/2017 14:59:30 PAGE 2   

  53   2              return;
  54   2          }
  55   1          _push_(PAGESEL);
  56   1          PAGESEL = PAGE_1;
  57   1          switch(pwm_num)
  58   1          {
  59   2            case PWM4_NUM:
  60   2            case PWM5_NUM:
  61   2                DUTY2L  = duty % 256;
  62   2                DUTY2H  = duty / 256;
  63   2                break;
  64   2            case PWM6_NUM:
  65   2            case PWM7_NUM:
  66   2                DUTY3L  = duty % 256;
  67   2                DUTY3H  = duty / 256;
  68   2                break;  
  69   2            default:
  70   2                break;        
  71   2          }
  72   1          _pop_(PAGESEL);
  73   1      }
  74          
  75          
  76          
  77          //=============================================================================================
  78          //
  79          //=============================================================================================
  80          void PWM_ISR(void) interrupt d_PWM_Vector
  81          {
  82   1          _push_(PAGESEL);
  83   1          PAGESEL  = PAGE_1;
  84   1          PWMINTF &= 0xFE;
  85   1          _pop_(PAGESEL);
  86   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    136    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
