C51 COMPILER V9.52.0.0   SENSOR                                                            12/28/2017 17:28:53 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SENSOR
OBJECT MODULE PLACED IN .\Objects\sensor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\Sensor\sensor.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USER\IIC;.\
                    -USER\UART;.\USER\TM1618;.\USER\Sensor;.\USER;.\USER\PWM;.\USER\DC_MOTOR;.\USER\timer;.\USER\inc;.\USER\EXINT;.\USER\touc
                    -h_key;.\USER\SYS_RUN;.\USER\step_motor;.\USER\BUZZER;.\USER\UART;.\USER\common;.\USER\lib;.\USER\UV;.\USER\ION;.\USER\EE
                    -PROM;.\USER\TM1620;.\USER\user_timer) DEBUG OBJECTEXTEND PRINT(.\Listings\sensor.lst) TABS(2) OBJECT(.\Objects\sensor.ob
                    -j)

line level    source

   1          #include <stdio.h>
   2          #include <string.h>
   3          #include "sensor.h"
   4          #include "SOFT_IIC.h"
   5          #include "global.h"
   6          #include "debug_uart.h"
   7          
   8          
   9          
  10          #define SENSOR_IIC_DELAY_COUNT  2
  11          
  12          void sensor_i2c_delay(void)
  13          {
  14   1        int i = 0;
  15   1        for(i = 0;i < SENSOR_IIC_DELAY_COUNT;i++);
  16   1      }
  17          
  18          
  19          void SENSOR_IIC_PinConifg(void)
  20          {
  21   1          //PIN设置为推挽输出，PxM0对应的位置1，PxM1对应的位置0  
  22   1          SENSOR_IIC_PxM0 &= ~((1 << SENSOR_IIC_SDA_PORTBIT) | (1 << SENSOR_IIC_SCL_PORTBIT));
  23   1          SENSOR_IIC_PxM1 &= ~((1 << SENSOR_IIC_SDA_PORTBIT) | (1 << SENSOR_IIC_SCL_PORTBIT));
  24   1        
  25   1          SENSOR_IIC_SCL_PIN = 1;
  26   1          SENSOR_IIC_SDA_PIN = 1;
  27   1      }
  28          
  29          
  30          
  31          void Set_Sensor_SDA_Pin_Mode(unsigned char mode)
  32          {
  33   1          if(mode == PIN_INPUT)
  34   1          {
  35   2              //PIN设置为输入时，PxM0对应的位置0，PxM1对应的位置1
  36   2              SENSOR_IIC_PxM0 &= ~(1 << SENSOR_IIC_SDA_PORTBIT);
  37   2              SENSOR_IIC_PxM1 |= (1 << SENSOR_IIC_SDA_PORTBIT);
  38   2          }
  39   1          else if(mode == PIN_OUTPUT)
  40   1          {      
  41   2              SENSOR_IIC_PxM0 &= ~(1 << SENSOR_IIC_SDA_PORTBIT);
  42   2              SENSOR_IIC_PxM1 &= ~(1 << SENSOR_IIC_SDA_PORTBIT);
  43   2          }
  44   1      }
  45            
  46          void Set_Sensor_SCL_Pin_Mode(unsigned char mode)
  47          {
  48   1          if(mode == PIN_INPUT)
  49   1          {
  50   2              //PIN设置为输入时，PxM0对应的位置0，PxM1对应的位置1
  51   2              SENSOR_IIC_PxM0 &= ~(1 << SENSOR_IIC_SCL_PORTBIT);
C51 COMPILER V9.52.0.0   SENSOR                                                            12/28/2017 17:28:53 PAGE 2   

  52   2              SENSOR_IIC_PxM1 |= ((1 << SENSOR_IIC_SCL_PORTBIT));
  53   2          }
  54   1          else if(mode == PIN_OUTPUT)
  55   1          {      
  56   2              SENSOR_IIC_PxM0 &= ~(1 << SENSOR_IIC_SCL_PORTBIT);
  57   2              SENSOR_IIC_PxM1 &= ~(1 << SENSOR_IIC_SCL_PORTBIT);     
  58   2          }
  59   1      
  60   1      }
  61          
  62          
  63          void Sensor_IIC_SDA_1(void)
  64          {
  65   1          SENSOR_IIC_SDA_PIN = 1;
  66   1      }
  67          
  68          void Sensor_IIC_SDA_0(void)
  69          {
  70   1          SENSOR_IIC_SDA_PIN = 0;
  71   1      }
  72          
  73          void Sensor_IIC_SCL_1(void)
  74          {
  75   1          SENSOR_IIC_SCL_PIN = 1;
  76   1      }
  77          void Sensor_IIC_SCL_0(void)
  78          {
  79   1          SENSOR_IIC_SCL_PIN = 0;
  80   1      }
  81          
  82          
  83          unsigned char Sensor_IIC_SDA_READ(void)
  84          {
  85   1          return (SENSOR_IIC_SDA_PIN ? 1 : 0);
  86   1      }
  87          
  88          /*
  89          HPD05传感器寄存器0x26存放的当前粉尘浓度的低8位，寄存器0x27存放的是当前粉尘浓度的高8位
  90          地址为0x9A 通讯波特率最大100kbps
  91          */
  92          unsigned int Read_PMSensor_Data(void)
  93          {
  94   1          static unsigned int last_pm_data = 0;
  95   1          unsigned char readaddr = HPD05_DATA_START_ADDR;
  96   1          unsigned char res = 1;
  97   1          unsigned int pm_data = 0;
  98   1        
  99   1          unsigned char readbuff[5] = {0};
 100   1          
 101   1          //unsigned char debug_buff[30] = {0};
 102   1      
 103   1          IIC_Operations.IIC_NUM = HPD05_IIC;
 104   1          IIC_Operations.Set_SDA_Pin_Mode = Set_Sensor_SDA_Pin_Mode;
 105   1          IIC_Operations.Set_SCL_Pin_Mode = Set_Sensor_SCL_Pin_Mode;
 106   1          IIC_Operations.i2c_delay = sensor_i2c_delay;
 107   1          IIC_Operations.SDA_1 = Sensor_IIC_SDA_1;
 108   1          IIC_Operations.SDA_0 = Sensor_IIC_SDA_0;
 109   1          IIC_Operations.SCL_1 = Sensor_IIC_SCL_1;
 110   1          IIC_Operations.SCL_0 = Sensor_IIC_SCL_0;
 111   1          IIC_Operations.I2C_SDA_READ = Sensor_IIC_SDA_READ;
 112   1        
 113   1          res = I2C_WriteBytes(HPD05_ADDRESS,&readaddr,1);
C51 COMPILER V9.52.0.0   SENSOR                                                            12/28/2017 17:28:53 PAGE 3   

 114   1         
 115   1          if(res == 0)
 116   1          {
 117   2              res = I2C_ReadBytes(HPD05_ADDRESS,readbuff,5);     
 118   2          }
 119   1          
 120   1          
 121   1          if(readbuff[0] & 0x01)
 122   1          {
 123   2              pm_data = ((unsigned int)readbuff[1]) << 8 | readbuff[2]; 
 124   2              if(pm_data == 0)
 125   2              {
 126   3                  pm_data = last_pm_data;
 127   3              }
 128   2           
 129   2              
 130   2      //        mymemset(debug_buff,0,30);
 131   2      //        sprintf(debug_buff,"buff:%x %x,pm_data:%d\n",(unsigned int)readbuff[1],(unsigned int)readbuff[2]
             -,(unsigned int)pm_data);
 132   2      //        DEBUG_Uart_Sendbytes(debug_buff,strlen(debug_buff));
 133   2            
 134   2            
 135   2      //        if(pm_data == 0)
 136   2      //        {
 137   2      //            pm_data = 2;
 138   2      //        }          
 139   2          }
 140   1          else
 141   1          {
 142   2              pm_data = last_pm_data;
 143   2          }
 144   1          
 145   1          last_pm_data = pm_data;
 146   1          
 147   1          /*
 148   1          if(pm_data <= 5)
 149   1          {
 150   1              pm_data = 5;
 151   1          } 
 152   1          else if(pm_data <= 10)
 153   1          {
 154   1              pm_data = 10;
 155   1          }
 156   1          else if(pm_data <= 15)
 157   1          {
 158   1              pm_data = 15;
 159   1          } 
 160   1          else if(pm_data <= 20)
 161   1          {
 162   1              pm_data = 20;
 163   1          }
 164   1          */
 165   1          
 166   1      //    mymemset(debug_buff,0,30);
 167   1      //    sprintf(debug_buff,"pm_data:%d\n",(unsigned int)pm_data);
 168   1      //    DEBUG_Uart_Sendbytes(debug_buff,strlen(debug_buff));
 169   1          
 170   1          return pm_data;
 171   1      
 172   1      }
 173          

C51 COMPILER V9.52.0.0   SENSOR                                                            12/28/2017 17:28:53 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    324    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =      2       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
