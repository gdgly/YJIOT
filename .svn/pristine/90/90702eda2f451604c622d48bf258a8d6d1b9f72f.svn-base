C51 COMPILER V9.52.0.0   DC_MOTOR                                                          01/11/2018 14:22:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DC_MOTOR
OBJECT MODULE PLACED IN .\Objects\dc_motor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\DC_MOTOR\dc_motor.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\projec
                    -t;.\USER\BUZZER;.\USER\charge;.\USER\common;.\USER\DC_MOTOR;.\USER\EEPROM;.\USER\EXINT;.\USER\IIC;.\USER\inc;.\USER\ION;
                    -.\USER\M26;.\USER\PWM;.\USER\Sensor;.\USER\step_motor;.\USER\SYS_RUN;.\USER\timer;.\USER\TM1620;.\USER\touch_key;.\USER\
                    -UART;.\USER\UV;.\USER\LVI) DEBUG OBJECTEXTEND PRINT(.\Listings\dc_motor.lst) TABS(2) OBJECT(.\Objects\dc_motor.obj)

line level    source

   1          #include "OB39R32T1.h"
   2          #include "dc_motor.h"
   3          #include "global.h"
   4          #include "PWM.h"
   5          #include "TM1620.h"
   6          #include "sensor.h"
   7          #include "timer.h"
   8          
   9          const unsigned int code PWM0DL_TAB[4] = {PWMDL_SPEED1,PWMDL_SPEED2,PWMDL_SPEED3,PWMDL_SPEED4};
  10          const unsigned char code MotorFG_TAB[4]={SPEED_FG_COUNT1,SPEED_FG_COUNT2,SPEED_FG_COUNT3,SPEED_FG_COUNT4};
  11          
  12          
  13          
  14          void Start_DC_Motor(void)
  15          {
  16   1          speed_dang = LOW_SPEED;
  17   1          pwmDLbak = 0;
  18   1          PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);
  19   1      }
  20          
  21          
  22          void Stop_DC_Motor(void)
  23          {
  24   1         speed_dang = DC_MOTOR_SPEED0;
  25   1        
  26   1         dev_status = 1;
  27   1      }
  28          
  29          
  30          void Set_DC_Motor_Speed(unsigned char speed)
  31          {
  32   1          if(speed > 4 || speed < 0)
  33   1          {
  34   2              return;
  35   2          }
  36   1          
  37   1          speed_dang = speed;
  38   1          IsSpeedChanged = 1;
  39   1          
  40   1          TM1620_LED_Control(speed_dang + 1,LED_ON);
  41   1          
  42   1          dev_status = 1;
  43   1      }
  44          
  45          
  46          //1ms执行1次
  47          void DirectMotor(void)
  48          {
  49   1        unsigned int temp = 0;
  50   1        
  51   1        nowtime_s = get_sys_stime();
  52   1        
C51 COMPILER V9.52.0.0   DC_MOTOR                                                          01/11/2018 14:22:50 PAGE 2   

  53   1        //开机后先开仓门，延时2秒再启动风机
  54   1        if(nowtime_s < (door_open_time + 2))
  55   1        {
  56   2            return;
  57   2        }
  58   1        
  59   1        if(speed_dang >= 1)
  60   1        {
  61   2            temp = PWM0DL_TAB[speed_dang-1] ;
  62   2        
  63   2        }
  64   1        
  65   1        if((sys_mode == RUNNING) && (IsSpeedChanged))// 转速发生改变, PWM 设定到目标值
  66   1        {
  67   2      
  68   2          if(speedBak != speed_dang)
  69   2          {
  70   3      
  71   3            gbMotorDelay = 1;
  72   3            speedBak = speed_dang;// 开始启动时, PWM 占空比设置的初始值
  73   3            gbMotorFGEn = 0;
  74   3      
  75   3          }
  76   2              
  77   2          if(gbMotorDelay)  // 启动到PWM 设定目标值
  78   2          { 
  79   3           
  80   3            if(pwmDLbak < temp)
  81   3            {      
  82   4              pwmDLbak += 5;
  83   4            }
  84   3            else if(pwmDLbak > temp)
  85   3            {
  86   4              pwmDLbak -= 5;
  87   4            }
  88   3            else
  89   3            {         
  90   4              gbMotorDelay=0;
  91   4              IsSpeedChanged = 0;
  92   4            }
  93   3            PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);
  94   3            
  95   3          }
  96   2          else          // 通过反馈信号FG  控制转速 
  97   2          { 
  98   3            gBMotorFGSet = MotorFG_TAB[speed_dang-1];
  99   3            gbMotorFGEn = 1;
 100   3          }
 101   2        }
 102   1        else if((sys_mode == STANDBY) && (IsSpeedChanged))
 103   1        {
 104   2          gbMotorFGEn = 0;      
 105   2          if(pwmDLbak >= 5)
 106   2          {
 107   3            if(IsFanRunning)
 108   3            {
 109   4                pwmDLbak -= 5;
 110   4                PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);    
 111   4            }
 112   3      
 113   3          }
 114   2          else
C51 COMPILER V9.52.0.0   DC_MOTOR                                                          01/11/2018 14:22:50 PAGE 3   

 115   2          { 
 116   3            if(IsFanRunning)
 117   3            {
 118   4                IsSpeedChanged = 0;
 119   4                pwmDLbak = 0;
 120   4                PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);
 121   4                IsFanRunning = 0; 
 122   4                speedBak = speed_dang;        
 123   4            }
 124   3      
 125   3          } 
 126   2        } 
 127   1      
 128   1      }
 129          
 130          //100ms执行一次
 131          void Dcmoto_adj(void)
 132          {
 133   1        //unsigned int temp = 0;  
 134   1        
 135   1        //防止FG信号或者电机出现问题后，PWM的脉宽一直增加
 136   1        unsigned int pwm_compare = 0;
 137   1        
 138   1        if(is_sys_auto_check == 1)
 139   1        {
 140   2            return;
 141   2        }
 142   1        
 143   1        
 144   1        switch(speed_dang)
 145   1        {
 146   2          case QUIET_SPEED:
 147   2            pwm_compare = PWMDL_SPEED1 + 5;
 148   2            break;
 149   2          case LOW_SPEED:
 150   2            pwm_compare = PWMDL_SPEED2 + 5;
 151   2            break;    
 152   2          case MID_SPEED:
 153   2            pwm_compare = PWMDL_SPEED3 + 5;
 154   2            break;  
 155   2          case HIGH_SPEED:
 156   2            pwm_compare = PWMDL_SPEED4 + 5;
 157   2            break;   
 158   2          default:
 159   2            return;      
 160   2        }
 161   1        
 162   1        
 163   1        if(gbMotorFGEn)
 164   1        {
 165   2          // 通过反馈信号FG  控制转速
 166   2          if(FGcount > gBMotorFGSet)
 167   2          {               
 168   3            if(pwmDLbak > pwm_compare)
 169   3            {
 170   4              pwmDLbak -= 5;
 171   4            }
 172   3          }
 173   2          else if (FGcount < gBMotorFGSet)
 174   2          {
 175   3            if(pwmDLbak < pwm_compare)
 176   3            {
C51 COMPILER V9.52.0.0   DC_MOTOR                                                          01/11/2018 14:22:50 PAGE 4   

 177   4              pwmDLbak += 5;
 178   4            }
 179   3          }
 180   2          PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);
 181   2        }
 182   1        
 183   1        
 184   1        FGcount = 0;
 185   1      }
 186          
 187          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    471    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
