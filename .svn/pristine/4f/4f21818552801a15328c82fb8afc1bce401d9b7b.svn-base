C51 COMPILER V9.52.0.0   UV                                                                10/31/2017 09:16:31 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UV
OBJECT MODULE PLACED IN .\Objects\UV.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\UV\UV.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USER\IIC;.\USER\UAR
                    -T;.\USER\TM1618;.\USER\Sensor;.\USER;.\USER\PWM;.\USER\DC_MOTOR;.\USER\timer;.\USER\inc;.\USER\EXINT;.\USER\touch_key;.\
                    -USER\SYS_RUN;.\USER\step_motor;.\USER\BUZZER;.\USER\UART;.\USER\common;.\USER\lib;.\USER\UV;.\USER\ION;.\USER\EEPROM;.\U
                    -SER\TM1620;.\USER\charge) DEBUG OBJECTEXTEND PRINT(.\Listings\UV.lst) TABS(2) OBJECT(.\Objects\UV.obj)

line level    source

   1          #include <stdio.h>
   2          #include "UV.h"
   3          #include "ADC.h"
   4          #include "global.h"
   5          #include "wifi_uart.h"
   6          #include "common.h"
   7          #include "TM1620.h"
   8          
   9          
  10          void UV_Pin_Init(void)
  11          {
  12   1          //UV_PIN_PxM0 &= ~(1 << UV_PIN_PORTBIT);
  13   1          UV_PIN_PxM0 |= (1 << UV_PIN_PORTBIT);
  14   1          UV_PIN_PxM1 &= ~(1 << UV_PIN_PORTBIT);
  15   1        
  16   1          UV_CONTROL_PIN = 0;
  17   1        
  18   1          ADCInit(d_ADCnEN, d_ADC_CLK_Sel);
  19   1      
  20   1      }
  21          
  22          void UV_On(void)
  23          {
  24   1          //unsigned char *wifi_send_buff = "uv on\n";
  25   1        
  26   1          UV_CONTROL_PIN = 1;
  27   1          IsUVOn = 1;
  28   1        
  29   1          //每次刚上电时，第一次检测到的ADC的值为0，所以初始化为-1，上电后最开始检测4次，忽略第1次，以后每次都是
             -检测3次
  30   1          uv_check_times = -1;
  31   1        
  32   1          //上电后5秒检测ADC的值
  33   1          uv_check_timeinterval = UV_CHECK_TIME_INTERVAL - 5;
  34   1        
  35   1          TM1820_LED_Control(LED_UV,LED_ON);
  36   1         
  37   1          //Wifi_Uart_Sendbytes(wifi_send_buff,mystrlen(wifi_send_buff)); 
  38   1      }
  39          
  40          void UV_Off(void)
  41          {
  42   1          //unsigned char *wifi_send_buff = "uv off\n";
  43   1        
  44   1          UV_CONTROL_PIN = 0;
  45   1          IsUVOn = 0;
  46   1          TM1820_LED_Control(LED_UV,LED_OFF);
  47   1          //Wifi_Uart_Sendbytes(wifi_send_buff,mystrlen(wifi_send_buff)); 
  48   1          
  49   1      }
  50          
  51          void UV_ADC_Start(void)
C51 COMPILER V9.52.0.0   UV                                                                10/31/2017 09:16:31 PAGE 2   

  52          {
  53   1          ADCfinish = 0;
  54   1          ADCstart(d_ADC_CH0_IN);
  55   1      }
  56          
  57          unsigned int Get_UV_ADC_Data(void)
  58          {
  59   1          unsigned int adc_data = 0;
  60   1        
  61   1          adc_data = n_data;
  62   1          n_data = 0;
  63   1          ADCfinish = 0;
  64   1          return adc_data;
  65   1      }
  66          
  67          //每次检测3秒钟，每1秒检测一次，3次数据都正常才可以，3次检测中如果有一次检测到的数据不正常则判定为UV出故障
  68          void UV_Check(void)
  69          {
  70   1          unsigned int uv_adc_data;
  71   1          unsigned char uv_adc_byte[3] = {0};
  72   1          //unsigned char wifi_send_buff[50] = {0};
  73   1        
  74   1          if(IsUVOn == 1)
  75   1          {           
  76   2              if(IsUVCheck == 1 && ADCfinish == 1)
  77   2              {
  78   3                  uv_adc_data = Get_UV_ADC_Data();
  79   3               
  80   3                  if(uv_adc_data < UV_ADC_CRITICAL_VALUE && uv_check_times >= 0)
  81   3                  {
  82   4                      IsUVfault = 1;
  83   4                  }
  84   3                  if(++uv_check_times == 3)
  85   3                  {   
  86   4                      IsUVCheck = 0;
  87   4                      uv_check_flag = 0;
  88   4                      uv_check_times = 0;     
  89   4                  }
  90   3      
  91   3      //            mymemset(wifi_send_buff,0,sizeof(wifi_send_buff));
  92   3      //            sprintf(wifi_send_buff,"adc data: %d,IsUVfault:%d\n",(unsigned int)uv_adc_data,(unsigned int
             -)IsUVfault);
  93   3      //            Wifi_Uart_Sendbytes(wifi_send_buff,mystrlen(wifi_send_buff));            
  94   3      
  95   3                  
  96   3              }
  97   2              
  98   2              
  99   2              if(IsUVCheck)
 100   2              {
 101   3                  if(uv_check_flag)
 102   3                  {
 103   4                      UV_ADC_Start();
 104   4                      uv_check_flag = 0;
 105   4                  }
 106   3              }
 107   2              
 108   2      
 109   2              
 110   2              if(uv_check_timeinterval >= UV_CHECK_TIME_INTERVAL)
 111   2              {
 112   3                  IsUVCheck = 1;
C51 COMPILER V9.52.0.0   UV                                                                10/31/2017 09:16:31 PAGE 3   

 113   3                  uv_check_timeinterval = 0;
 114   3              }
 115   2              
 116   2              
 117   2              if(IsUVfault == 1)
 118   2              {
 119   3                  UV_Off();
 120   3              }
 121   2          }
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    184    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
