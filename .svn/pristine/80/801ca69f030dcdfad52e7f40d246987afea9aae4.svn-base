C51 COMPILER V9.52.0.0   LED                                                               12/28/2017 10:57:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\User\led\led.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User;..\User\led;..
                    -\User\touch;..\User\timer;..\User\inc) DEBUG OBJECTEXTEND PRINT(.\Listings\led.lst) TABS(2) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          #include "touch.h"
   3          #include "global.h"
   4          
   5          extern KEY_INFO_Typedef key_info;
   6          
   7          LED_BLINK_Typedef led_blink_info;
   8          
   9          
  10          /*
  11          #define DELAY_NUM  100000
  12          static void led_blink_delay(unsigned int num)
  13          {
  14              unsigned int i = 0;
  15              for(i = 0;i < num;i++);
  16          }
  17          */
  18          
  19          
  20          void Led_Pin_Config(void)
  21          {
  22   1          //LED_PIN_PxM0 &= ~((1 << LED_POWER_PORTBIT) | (1 << LED_SPEED_PORTBIT) | (1 << LED_TIMER_PORTBIT) | (
             -1 << LED_MODE_PORTBIT));
  23   1          LED_PIN_PxM0|= ((1 << LED_POWER_PORTBIT) | (1 << LED_SPEED_PORTBIT) | (1 << LED_TIMER_PORTBIT) | (1 <<
             - LED_MODE_PORTBIT));
  24   1          LED_PIN_PxM1 &= ~((1 << LED_POWER_PORTBIT) | (1 << LED_SPEED_PORTBIT) | (1 << LED_TIMER_PORTBIT) | (1 
             -<< LED_MODE_PORTBIT));
  25   1        
  26   1          LED_POWER_PIN = 1;
  27   1          LED_SPEED_PIN = 1;
  28   1          LED_TIMER_PIN = 1;
  29   1          LED_MODE_PIN = 1;
  30   1      
  31   1      
  32   1      }
  33          
  34          
  35          
  36          void LedBlink(void)
  37          {
  38   1          if(key_info.IsTouchedKey == 1)
  39   1          {
  40   2               if(key_info.WhichKey == KEY_NONE)
  41   2               {
  42   3                   return;
  43   3               }
  44   2              
  45   2              led_blink_info.IsLedBlink = 1;
  46   2              led_blink_info.ledcount_1ms_times = 0;
  47   2              led_blink_info.blinktimes = 0;
  48   2              //test
  49   2              led_blink_info.ledstate = LED_ON;
  50   2              which_key_blink = key_info.WhichKey;
  51   2              
C51 COMPILER V9.52.0.0   LED                                                               12/28/2017 10:57:50 PAGE 2   

  52   2              key_info.IsTouchedKey = 0;      
  53   2          }
  54   1          
  55   1          if(led_blink_info.IsLedBlink == 1)
  56   1          {
  57   2              if(led_blink_info.blinktimes >= LED_BLINK_TIMES)
  58   2              {
  59   3                  led_blink_info.IsLedBlink = 0;
  60   3                  led_blink_info.ledcount_1ms_times = 0;
  61   3                  led_blink_info.blinktimes = 0;
  62   3              }
  63   2          }
  64   1      
  65   1      
  66   1      
  67   1      }
  68          
  69          
  70          /*
  71          void Led_Control(unsigned char led,unsigned char on_off)
  72          {
  73              if(led == KEY_NONE || led >= KEY_MAX_VALUE)
  74              {
  75                  return;
  76              }
  77              if(on_off >= LED_NONE)
  78              {
  79                  return;
  80              }
  81              switch(led)
  82              {
  83                case KEY_MODE:
  84                  LED_MODE_PIN = on_off;
  85                  break;
  86                case KEY_TIMER:
  87                  LED_TIMER_PIN = on_off;
  88                  break;
  89                case KEY_SPEED:
  90                  LED_SPEED_PIN = on_off;
  91                  break;
  92                case KEY_POWER:
  93                  LED_POWER_PIN = on_off;
  94                  break;
  95                default:
  96                  break;        
  97              }
  98          }
  99          */
 100          
 101          
 102          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     64    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.52.0.0   LED                                                               12/28/2017 10:57:50 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
