C51 COMPILER V9.52.0.0   STEP_MOTOR                                                        12/18/2017 15:06:02 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE STEP_MOTOR
OBJECT MODULE PLACED IN .\Objects\step_motor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\step_motor\step_motor.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USE
                    -R\IIC;.\USER\UART;.\USER\TM1618;.\USER\Sensor;.\USER;.\USER\PWM;.\USER\DC_MOTOR;.\USER\timer;.\USER\inc;.\USER\EXINT;.\U
                    -SER\touch_key;.\USER\SYS_RUN;.\USER\step_motor;.\USER\BUZZER;.\USER\UART;.\USER\common;.\USER\lib;.\USER\UV;.\USER\ION;.
                    -\USER\EEPROM;.\USER\TM1620;.\USER\charge) DEBUG OBJECTEXTEND PRINT(.\Listings\step_motor.lst) TABS(2) OBJECT(.\Objects\s
                    -tep_motor.obj)

line level    source

   1          #include "step_motor.h"
   2          #include "global.h"
   3          #include "dc_motor.h"
   4          #include "timer.h"
   5          #include "sys_run.h"
   6          
   7          
   8          /*当仓门关闭时，仓门检测引脚是高电平；当仓门打开时，仓门检测引脚是低电平*/
   9          
  10          void Door_Pin_Init(void)
  11          {
  12   1          DOOR_CHECK_PxM0 &= ~(1 << DOOR_CHECK_PORTBIT); 
  13   1          DOOR_CHECK_PxM1 &= ~(1 << DOOR_CHECK_PORTBIT); 
  14   1      
  15   1      }
  16          
  17          
  18          void Step_Motor_Pin_Init(void)
  19          {
  20   1          //P2M0 &= ~((1 << 0) | (1 << 1) |(1 << 2) |(1 << 3));
  21   1          P2M0 |= ((1 << 0) | (1 << 1) |(1 << 2) |(1 << 3));
  22   1          P2M1 &= ~((1 << 0) | (1 << 1) |(1 << 2) |(1 << 3));
  23   1         
  24   1          STEP_MOTOR_A=0;
  25   1          STEP_MOTOR_B=0;
  26   1          STEP_MOTOR_C=0;
  27   1          STEP_MOTOR_D=0;  
  28   1        
  29   1          Door_Pin_Init();
  30   1      }
  31          
  32          
  33          //当仓门关闭时，仓门检测引脚是高电平；当仓门打开时，仓门检测引脚是低电平
  34          //void Door_Check(void)
  35          //{
  36          //    //当步进电机停止转动后再检测仓门
  37          //    if(sys_mode == STANDBY && IsStepMotorBusy == 0)
  38          //    {
  39          //        if(!DOOR_CHECK_PIN)
  40          //        {
  41          //            IsSysFault = 1;
  42          //        }
  43          //    }
  44          //    
  45          //    
  46          //    if(sys_mode == RUNNING && IsStepMotorBusy == 0)
  47          //    {
  48          //        if(DOOR_CHECK_PIN)
  49          //        {
  50          //            IsSysFault = 1;
  51          //        }
C51 COMPILER V9.52.0.0   STEP_MOTOR                                                        12/18/2017 15:06:02 PAGE 2   

  52          //    }
  53          
  54          //}
  55          
  56          
  57          
  58          void Door_Open(void)
  59          {
  60   1          Is_Door_Open = 1;
  61   1          door_open_time = get_sys_stime();
  62   1          StartMotor(-220);
  63   1      }
  64          
  65          void Door_Close(void)
  66          {
  67   1          StartMotor(220);
  68   1          Is_Door_Open = 0;
  69   1      }
  70          
  71          void StartMotor(signed long angle)
  72          {
  73   1      //    beats = (angle*4076)/360;
  74   1          beats = (angle*4076)/360;
  75   1          IsStepMotorBusy = 1;
  76   1      }
  77          
  78          
  79          void Check_If_Close_Door(void)
  80          {
  81   1          const unsigned int time_interval = 60;
  82   1          unsigned long nowtime = 0;
  83   1        
  84   1          //if(cost_info.IsCostType == 1 && cost_info.lefttime == 0)
  85   1          if(sys_mode == STANDBY)
  86   1          {
  87   2              if(Is_Door_Open == 1)
  88   2              {
  89   3                  nowtime = get_sys_stime();
  90   3                  if(nowtime >= (door_open_time + time_interval))
  91   3                  {
  92   4                      Door_Close();
  93   4                  }
  94   3              }
  95   2          }
  96   1      }
  97          
  98          
  99          /*
 100          void StopMotor(void)
 101          {
 102            beats = 0;
 103          }
 104          */
 105          
 106          void TurnMotor(void)
 107          {
 108   1        static unsigned char index = 0;
 109   1        static const unsigned char BeatCode[8] = {0x01, 0x03, 0x02, 0x06, 0x04, 0x0c, 0x08, 0x09};
 110   1      
 111   1        if(beats != 0)
 112   1        {
 113   2          
C51 COMPILER V9.52.0.0   STEP_MOTOR                                                        12/18/2017 15:06:02 PAGE 3   

 114   2          if(beats > 0)
 115   2          {
 116   3            index++;
 117   3            index = index & 0x07;
 118   3            beats--;
 119   3          }
 120   2          else
 121   2          {
 122   3            index--;
 123   3            index = index & 0x07;
 124   3            beats++;
 125   3          }
 126   2          
 127   2          if(BeatCode[index]&0x1) {STEP_MOTOR_A=1;} else {STEP_MOTOR_A=0;}
 128   2          if(BeatCode[index]&0x2) {STEP_MOTOR_B=1;} else {STEP_MOTOR_B=0;}
 129   2          if(BeatCode[index]&0x4) {STEP_MOTOR_C=1;} else {STEP_MOTOR_C=0;}
 130   2          if(BeatCode[index]&0x8) {STEP_MOTOR_D=1;} else {STEP_MOTOR_D=0;}
 131   2          
 132   2      
 133   2        }
 134   1        else
 135   1        {
 136   2          if(IsStepMotorBusy == 1)
 137   2          {
 138   3              STEP_MOTOR_A = 0;
 139   3              STEP_MOTOR_B = 0;
 140   3              STEP_MOTOR_C = 0;
 141   3              STEP_MOTOR_D = 0;
 142   3              IsStepMotorBusy = 0;
 143   3            
 144   3              //当步进电机转动结束后，如果检测到仓门没有到位则可能是仓门坏了不能打开，停止风机，按键失效
 145   3              //Door_Check();
 146   3      //        if(IsSysFault == 1)
 147   3      //        {
 148   3      //            //关闭风机的条件是(sys_mode == STANDBY) && (IsSpeedChanged == 1) 
 149   3      ////            sys_mode = STANDBY; 
 150   3      ////            IsSpeedChanged = 1;
 151   3      ////            Stop_DC_Motor();
 152   3      //            if(sys_mode == RUNNING)
 153   3      //            {
 154   3      //                sys_stop();
 155   3      //            }
 156   3      //            
 157   3      //        }
 158   3          }
 159   2          
 160   2        }
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    400    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
