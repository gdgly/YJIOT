C51 COMPILER V9.52.0.0   LVI_LVR                                                           12/21/2017 11:02:15 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LVI_LVR
OBJECT MODULE PLACED IN .\Objects\LVI_LVR.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\LVI\LVI_LVR.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\project;.\US
                    -ER\BUZZER;.\USER\charge;.\USER\common;.\USER\DC_MOTOR;.\USER\EEPROM;.\USER\EXINT;.\USER\IIC;.\USER\inc;.\USER\ION;.\USER
                    -\M26;.\USER\PWM;.\USER\Sensor;.\USER\step_motor;.\USER\SYS_RUN;.\USER\timer;.\USER\TM1620;.\USER\touch_key;.\USER\UART;.
                    -\USER\UV;.\USER\LVI) DEBUG OBJECTEXTEND PRINT(.\Listings\LVI_LVR.lst) TABS(2) OBJECT(.\Objects\LVI_LVR.obj)

line level    source

   1          #include <stdio.h>
   2          #include <string.h>
   3          #include "OB39R32T1.h"
   4          #include "LVI_LVR.h"
   5          #include "debug_uart.h"
   6          #include "EEPROM.h"
   7          #include "M26.h"
   8          #include "charge.h"
   9          
  10          extern M26_Cmd_Typedef m26_cmd_info;
  11          
  12          #define d_LVI_EN    0x01
  13          #define d_LVR_EN    0x00
  14          
  15          void LVI_EN(void)
  16          {
  17   1          //LVC   |= 0x80;   //1.65V
  18   1          //LVC   |= 0x81;   //2.6V
  19   1          //LVC   |= 0x82;   //3.2V
  20   1          LVC   |= 0x83;   //4V
  21   1          IELVI  = 1;
  22   1          EA     = 1;
  23   1      }
  24          
  25          void LVR_Disable(void)
  26          {
  27   1          LVC &= 0xDF;
  28   1      }
  29          
  30          void LVI(void) interrupt d_LVI_Vector
  31          { 
  32   1          unsigned char readbuff[5] = 0;
  33   1          if(charge_info.IsChargeType == 0 || charge_info.lefttime.l_time == 0)
  34   1          {
  35   2              return;
  36   2          }
  37   1          else
  38   1          {
  39   2              //避免因电源有问题，频繁的操作flash
  40   2              if(g_1s_times > 60)
  41   2              {            
  42   3                  charge_lefttime_flash_write();
  43   3                
  44   3                  mymemset(m26_cmd_info.sendtring,0,sizeof(m26_cmd_info.sendtring));
  45   3                  sprintf(m26_cmd_info.sendtring,"power off,flash save\r\n");
  46   3                  DEBUG_Uart_Sendbytes(m26_cmd_info.sendtring,mystrlen(m26_cmd_info.sendtring));
  47   3              }
  48   2              
  49   2          }
  50   1          
  51   1      //    mymemset(m26_cmd_info.sendtring,0,sizeof(m26_cmd_info.sendtring));
  52   1      //    sprintf(m26_cmd_info.sendtring,"power off,flash save\r\n");
C51 COMPILER V9.52.0.0   LVI_LVR                                                           12/21/2017 11:02:15 PAGE 2   

  53   1      //    DEBUG_Uart_Sendbytes(m26_cmd_info.sendtring,mystrlen(m26_cmd_info.sendtring));
  54   1          
  55   1          
  56   1          
  57   1      
  58   1          
  59   1      //    mymemset(readbuff,0,sizeof(readbuff));
  60   1      //    EEPROM_Read_Bytes(readbuff,(unsigned int)(charge_info.eeprom_next_write_addr-5),5);
  61   1      //    mymemset(m26_cmd_info.sendtring,0,sizeof(m26_cmd_info.sendtring));
  62   1      //    sprintf(m26_cmd_info.sendtring,"read data:%x %x %x %x %x\r\n",(unsigned int)readbuff[0],(unsigned in
             -t)readbuff[1],
  63   1      //             (unsigned int)readbuff[2],(unsigned int)readbuff[3],(unsigned int)readbuff[4]);
  64   1      //    DEBUG_Uart_Sendbytes(m26_cmd_info.sendtring,strlen(m26_cmd_info.sendtring));
  65   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    196    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
