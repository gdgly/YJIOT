C51 COMPILER V9.52.0.0   DC_MOTOR                                                          01/22/2018 10:28:13 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DC_MOTOR
OBJECT MODULE PLACED IN .\Objects\dc_motor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\DC_MOTOR\dc_motor.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\projec
                    -t;.\USER\BUZZER;.\USER\DC_MOTOR;.\USER\EXINT;.\USER\IIC;.\USER\inc;.\USER\ION;.\USER\PWM;.\USER\step_motor;.\USER\SYS_RU
                    -N;.\USER\timer;.\USER\TM1620;.\USER\touch_key;.\USER\UART;.\USER\UV;.\USER\Sensor;.\USER\user_timer) DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\dc_motor.lst) TABS(2) OBJECT(.\Objects\dc_motor.obj)

line level    source

   1          #include "OB39R32T1.h"
   2          #include "dc_motor.h"
   3          #include "global.h"
   4          #include "PWM.h"
   5          #include "TM1620.h"
   6          #include "sensor.h"
   7          #include "timer.h"
   8          
   9          const unsigned int code PWM0DL_TAB[4] = {PWMDL_SPEED1,PWMDL_SPEED2,PWMDL_SPEED3,PWMDL_SPEED4};
  10          const unsigned char code MotorFG_TAB[4]={SPEED_FG_COUNT1,SPEED_FG_COUNT2,SPEED_FG_COUNT3,SPEED_FG_COUNT4};
  11          
  12          
  13          
  14          void Start_DC_Motor(void)
  15          {
  16   1          speed_dang = LOW_SPEED;
  17   1          pwmDLbak = 0;
  18   1          PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);
  19   1      }
  20          
  21          
  22          void Stop_DC_Motor(void)
  23          {
  24   1         speed_dang = DC_MOTOR_SPEED0;
  25   1      }
  26          
  27          
  28          void Set_DC_Motor_Speed(unsigned char speed)
  29          {
  30   1          if(speed > 4 || speed < 0)
  31   1          {
  32   2              return;
  33   2          }
  34   1          
  35   1          speed_dang = speed;
  36   1          IsSpeedChanged = 1;
  37   1          
  38   1          TM1620_LED_Control(speed_dang + 1,LED_ON);
  39   1      }
  40          
  41          
  42          //1ms执行1次
  43          void DirectMotor(void)
  44          {
  45   1        unsigned int temp = 0;
  46   1        
  47   1        nowtime_s = get_sys_stime();
  48   1        
  49   1        //开机后先开仓门，延时2秒再启动风机
  50   1        if(nowtime_s < (door_open_time + 2))
  51   1        {
  52   2            return;
C51 COMPILER V9.52.0.0   DC_MOTOR                                                          01/22/2018 10:28:13 PAGE 2   

  53   2        }
  54   1        
  55   1        if(speed_dang >= 1)
  56   1        {
  57   2            temp = PWM0DL_TAB[speed_dang-1] ;
  58   2        
  59   2        }
  60   1        
  61   1        if((sys_mode == RUNNING) && (IsSpeedChanged))// 转速发生改变, PWM 设定到目标值
  62   1        {
  63   2      
  64   2          if(speedBak != speed_dang)
  65   2          {
  66   3      
  67   3            gbMotorDelay = 1;
  68   3            speedBak = speed_dang;// 开始启动时, PWM 占空比设置的初始值
  69   3            gbMotorFGEn = 0;
  70   3      
  71   3          }
  72   2              
  73   2          if(gbMotorDelay)  // 启动到PWM 设定目标值
  74   2          { 
  75   3           
  76   3            if(pwmDLbak < temp)
  77   3            {      
  78   4              pwmDLbak += 5;
  79   4            }
  80   3            else if(pwmDLbak > temp)
  81   3            {
  82   4              pwmDLbak -= 5;
  83   4            }
  84   3            else
  85   3            {         
  86   4              gbMotorDelay=0;
  87   4              IsSpeedChanged = 0;
  88   4            }
  89   3            PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);
  90   3            
  91   3          }
  92   2          else          // 通过反馈信号FG  控制转速 
  93   2          { 
  94   3            gBMotorFGSet = MotorFG_TAB[speed_dang-1];
  95   3            gbMotorFGEn = 1;
  96   3          }
  97   2        }
  98   1        else if((sys_mode == STANDBY) && (IsSpeedChanged))
  99   1        {
 100   2          gbMotorFGEn = 0;      
 101   2          if(pwmDLbak >= 5)
 102   2          {
 103   3            if(IsFanRunning)
 104   3            {
 105   4                pwmDLbak -= 5;
 106   4                PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);    
 107   4            }
 108   3      
 109   3          }
 110   2          else
 111   2          { 
 112   3            if(IsFanRunning)
 113   3            {
 114   4                IsSpeedChanged = 0;
C51 COMPILER V9.52.0.0   DC_MOTOR                                                          01/22/2018 10:28:13 PAGE 3   

 115   4                pwmDLbak = 0;
 116   4                PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);
 117   4                IsFanRunning = 0; 
 118   4                speedBak = speed_dang;        
 119   4            }
 120   3      
 121   3          } 
 122   2        } 
 123   1      
 124   1      }
 125          
 126          //100ms执行一次
 127          void Dcmoto_adj(void)
 128          {
 129   1        //unsigned int temp = 0;  
 130   1        
 131   1        //防止FG信号或者电机出现问题后，PWM的脉宽一直增加
 132   1        unsigned int pwm_compare = 0;
 133   1        
 134   1        if(is_sys_auto_check == 1)
 135   1        {
 136   2            return;
 137   2        }
 138   1        
 139   1        
 140   1        switch(speed_dang)
 141   1        {
 142   2          case QUIET_SPEED:
 143   2            pwm_compare = PWMDL_SPEED1 + 5;
 144   2            break;
 145   2          case LOW_SPEED:
 146   2            pwm_compare = PWMDL_SPEED2 + 5;
 147   2            break;    
 148   2          case MID_SPEED:
 149   2            pwm_compare = PWMDL_SPEED3 + 5;
 150   2            break;  
 151   2          case HIGH_SPEED:
 152   2            pwm_compare = PWMDL_SPEED4 + 5;
 153   2            break;   
 154   2          default:
 155   2            return;      
 156   2        }
 157   1        
 158   1        
 159   1        if(gbMotorFGEn)
 160   1        {
 161   2          // 通过反馈信号FG  控制转速
 162   2          if(FGcount > gBMotorFGSet)
 163   2          {               
 164   3            if(pwmDLbak > pwm_compare)
 165   3            {
 166   4              pwmDLbak -= 5;
 167   4            }
 168   3          }
 169   2          else if (FGcount < gBMotorFGSet)
 170   2          {
 171   3            if(pwmDLbak < pwm_compare)
 172   3            {
 173   4              pwmDLbak += 5;
 174   4            }
 175   3          }
 176   2          PWM_Set_Duty(DC_MOTOR_PWM,pwmDLbak);
C51 COMPILER V9.52.0.0   DC_MOTOR                                                          01/22/2018 10:28:13 PAGE 4   

 177   2        }
 178   1        
 179   1        
 180   1        FGcount = 0;
 181   1      }
 182          
 183          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    467    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
