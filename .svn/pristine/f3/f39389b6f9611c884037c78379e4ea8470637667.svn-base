C51 COMPILER V9.52.0.0   STEP_MOTOR                                                        12/18/2017 15:06:11 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE STEP_MOTOR
OBJECT MODULE PLACED IN .\Objects\step_motor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\step_motor\step_motor.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USE
                    -R\IIC;.\USER\UART;.\USER\TM1618;.\USER\Sensor;.\USER;.\USER\PWM;.\USER\DC_MOTOR;.\USER\timer;.\USER\inc;.\USER\EXINT;.\U
                    -SER\touch_key;.\USER\SYS_RUN;.\USER\step_motor;.\USER\BUZZER;.\USER\UART;.\USER\common;.\USER\lib;.\USER\UV;.\USER\ION;.
                    -\USER\EEPROM;.\USER\TM1620;.\USER\user_timer) DEBUG OBJECTEXTEND PRINT(.\Listings\step_motor.lst) TABS(2) OBJECT(.\Objec
                    -ts\step_motor.obj)

line level    source

   1          #include "step_motor.h"
   2          #include "global.h"
   3          //#include "TM1618.h"
   4          #include "dc_motor.h"
   5          #include "timer.h"
   6          #include "sys_run.h"
   7          
   8          
   9          //当仓门关闭时，仓门检测引脚是高电平；当仓门打开时，仓门检测引脚是低电平
  10          
  11          void Door_Pin_Init(void)
  12          {
  13   1          DOOR_CHECK_PxM0 &= ~(1 << DOOR_CHECK_PORTBIT); 
  14   1          DOOR_CHECK_PxM1 &= ~(1 << DOOR_CHECK_PORTBIT); 
  15   1      
  16   1      }
  17          
  18          
  19          void Step_Motor_Pin_Init(void)
  20          {
  21   1          //P2M0 &= ~((1 << 0) | (1 << 1) |(1 << 2) |(1 << 3));
  22   1          P2M0 |= ((1 << 0) | (1 << 1) |(1 << 2) |(1 << 3));
  23   1          P2M1 &= ~((1 << 0) | (1 << 1) |(1 << 2) |(1 << 3));
  24   1         
  25   1          STEP_MOTOR_A=0;
  26   1          STEP_MOTOR_B=0;
  27   1          STEP_MOTOR_C=0;
  28   1          STEP_MOTOR_D=0;  
  29   1        
  30   1          Door_Pin_Init();
  31   1      }
  32          
  33          
  34          
  35          
  36          void Door_Open(void)
  37          {
  38   1          Is_Door_Open = 1;
  39   1          door_open_time = get_sys_stime();
  40   1          StartMotor(-220);
  41   1      }
  42          
  43          void Door_Close(void)
  44          {
  45   1          //TM1618_DispalyData(2,222);
  46   1          StartMotor(220);
  47   1          Is_Door_Open = 0;
  48   1      }
  49          
  50          void StartMotor(signed long angle)
  51          {
C51 COMPILER V9.52.0.0   STEP_MOTOR                                                        12/18/2017 15:06:11 PAGE 2   

  52   1      //    beats = (angle*4076)/360;
  53   1          beats = (angle*4076)/360;
  54   1          IsStepMotorBusy = 1;
  55   1      }
  56          
  57          
  58          void Check_If_Close_Door(void)
  59          {
  60   1          const unsigned int time_interval = 60;
  61   1          unsigned long nowtime = 0;
  62   1       
  63   1          //if(cost_info.IsCostType == 1 && cost_info.lefttime == 0)
  64   1          if(sys_mode == STANDBY)
  65   1          {
  66   2              if(Is_Door_Open == 1)
  67   2              {
  68   3                  nowtime = get_sys_stime();
  69   3                  if(nowtime >= (door_open_time + time_interval))
  70   3                  {
  71   4                      Door_Close();
  72   4                  }
  73   3              }
  74   2          }
  75   1      }
  76          
  77          
  78          /*
  79          void StopMotor(void)
  80          {
  81            beats = 0;
  82          }
  83          */
  84          
  85          void TurnMotor(void)
  86          {
  87   1        static unsigned char index = 0;
  88   1        static const unsigned char BeatCode[8] = {0x01, 0x03, 0x02, 0x06, 0x04, 0x0c, 0x08, 0x09};
  89   1      
  90   1        if(beats != 0)
  91   1        {
  92   2          
  93   2          if(beats > 0)
  94   2          {
  95   3            index++;
  96   3            index = index & 0x07;
  97   3            beats--;
  98   3          }
  99   2          else
 100   2          {
 101   3            index--;
 102   3            index = index & 0x07;
 103   3            beats++;
 104   3          }
 105   2          
 106   2          if(BeatCode[index]&0x1) {STEP_MOTOR_A=1;} else {STEP_MOTOR_A=0;}
 107   2          if(BeatCode[index]&0x2) {STEP_MOTOR_B=1;} else {STEP_MOTOR_B=0;}
 108   2          if(BeatCode[index]&0x4) {STEP_MOTOR_C=1;} else {STEP_MOTOR_C=0;}
 109   2          if(BeatCode[index]&0x8) {STEP_MOTOR_D=1;} else {STEP_MOTOR_D=0;}
 110   2          
 111   2      
 112   2        }
 113   1        else
C51 COMPILER V9.52.0.0   STEP_MOTOR                                                        12/18/2017 15:06:11 PAGE 3   

 114   1        {
 115   2          if(IsStepMotorBusy == 1)
 116   2          {
 117   3              STEP_MOTOR_A = 0;
 118   3              STEP_MOTOR_B = 0;
 119   3              STEP_MOTOR_C = 0;
 120   3              STEP_MOTOR_D = 0;
 121   3              IsStepMotorBusy = 0;
 122   3            
 123   3              //当步进电机转动结束后，如果检测到仓门没有到位则可能是仓门坏了不能打开，停止风机，按键失效
 124   3              //Door_Check();
 125   3      //        if(IsSysFault == 1)
 126   3      //        {
 127   3      //            //关闭风机的条件是(sys_mode == STANDBY) && (IsSpeedChanged == 1) 
 128   3      ////            sys_mode = STANDBY; 
 129   3      ////            IsSpeedChanged = 1;
 130   3      ////            Stop_DC_Motor();
 131   3      //            if(sys_mode == RUNNING)
 132   3      //            {
 133   3      //                sys_stop();
 134   3      //            }
 135   3      //            
 136   3      //        }
 137   3          }
 138   2          
 139   2        }
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    400    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
