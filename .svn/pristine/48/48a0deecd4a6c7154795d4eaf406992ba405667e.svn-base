package com.yjyz.iot.security.service.impl;

import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.yjyz.iot.security.dao.PowAppInfoMapper;
import com.yjyz.iot.security.dao.PowResourceMapper;
import com.yjyz.iot.security.dao.PowRoleMapper;
import com.yjyz.iot.security.dao.PowRoleResourceMapper;
import com.yjyz.iot.security.dao.PowSysUserMapper;
import com.yjyz.iot.security.dao.PowUserRoleMapper;
import com.yjyz.iot.security.entity.PowAppInfo;
import com.yjyz.iot.security.entity.PowResource;
import com.yjyz.iot.security.entity.PowRole;
import com.yjyz.iot.security.entity.PowRoleKey;
import com.yjyz.iot.security.entity.PowRoleResourceKey;
import com.yjyz.iot.security.entity.PowSysUser;
import com.yjyz.iot.security.entity.PowSysUserKey;
import com.yjyz.iot.security.entity.PowUserRoleKey;
import com.yjyz.iot.security.service.IPowerService;

@Service("powerService")
public class PowerServiceImpl implements IPowerService {

	@Resource
	PowAppInfoMapper powAppInfoDao;
	@Resource
	PowResourceMapper powResourceDao;
	@Resource
	PowRoleMapper powRoleDao;
	@Resource
	PowRoleResourceMapper powRoleResourceDao;
	@Resource
	PowSysUserMapper powSysUserDao;
	@Resource
	PowUserRoleMapper powUserRoleDao;

	@Override
	public PowAppInfo addApp(PowAppInfo powAppInfo) throws Exception {
		powAppInfo.setAppId(UUID.randomUUID().toString());
		int ret = this.powAppInfoDao.insertSelective(powAppInfo);
		if (ret == 1) {
			return powAppInfo;
		} else {
			return null;
		}
	}

	@Override
	public boolean delApp(PowAppInfo powAppInfo) throws Exception {

		int ret = this.powAppInfoDao.deleteByPrimaryKey(powAppInfo.getAppId());
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public boolean updApp(PowAppInfo powAppInfo) throws Exception {
		int ret = this.powAppInfoDao.updateByPrimaryKeySelective(powAppInfo);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public PowAppInfo selApp(PowAppInfo powAppInfo) throws Exception {
		return this.powAppInfoDao.selectByPrimaryKey(powAppInfo.getAppId());

	}

	@Override
	public List<PowAppInfo> selAppAll() throws Exception {
		return this.powAppInfoDao.selectAll();
	}

	@Override
	public PowRole addRole(PowRole powRole) throws Exception {
		powRole.setRoleId(UUID.randomUUID().toString());
		int ret = this.powRoleDao.insertSelective(powRole);
		if (ret == 1) {
			return powRole;
		} else {
			return null;
		}
	}

	@Override
	public boolean delRole(PowRole powRole) throws Exception {

		int ret = this.powRoleDao.deleteByPrimaryKey(powRole);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public boolean updRole(PowRole powRole) throws Exception {
		int ret = this.powRoleDao.updateByPrimaryKeySelective(powRole);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public PowRole selRole(PowRole powRole) throws Exception {
		return this.powRoleDao.selectByPrimaryKey(powRole);

	}

	@Override
	public List<PowRole> selRoleByAppAll(String appId) throws Exception {
		PowRoleKey key = new PowRoleKey();
		key.setAppId(appId);
		return this.powRoleDao.selectByAppId(key);
	}

	@Override
	public boolean addSysUser(PowSysUser powSysUser) throws Exception {
		int ret = this.powSysUserDao.insertSelective(powSysUser);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public boolean delSysUser(PowSysUser powSysUser) throws Exception {

		int ret = this.powSysUserDao.deleteByPrimaryKey(powSysUser);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public boolean updSysUser(PowSysUser powSysUser) throws Exception {
		int ret = this.powSysUserDao.updateByPrimaryKeySelective(powSysUser);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public PowSysUser selSysUser(PowSysUser powSysUser) throws Exception {
		return this.powSysUserDao.selectByPrimaryKey(powSysUser);

	}

	@Override
	public List<PowSysUser> selSysUserByAppAll(String appId) throws Exception {
		PowSysUserKey key = new PowSysUserKey();
		key.setAppid(appId);
		return this.powSysUserDao.selectByAppId(key);
	}

	@Override
	public PowResource addResource(PowResource powResource) throws Exception {
		powResource.setResId(UUID.randomUUID().toString());
		int ret = this.powResourceDao.insertSelective(powResource);
		if (ret == 1) {
			return powResource;
		} else {
			return null;
		}
	}

	@Override
	public boolean delResource(PowResource powResource) throws Exception {

		int ret = this.powResourceDao.deleteByPrimaryKey(powResource.getResId());
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public boolean updResource(PowResource powResource) throws Exception {
		int ret = this.powResourceDao.updateByPrimaryKeySelective(powResource);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public PowResource selResource(PowResource powResource) throws Exception {
		return this.powResourceDao.selectByPrimaryKey(powResource.getResId());

	}

	@Override
	public List<PowResource> selResourceByAppAll(String appId) throws Exception {
		return this.powResourceDao.selectByAppId(appId);
	}

	@Override
	public boolean addRoleResource(PowRoleResourceKey powRoleResource) throws Exception {
		int ret = this.powRoleResourceDao.insertSelective(powRoleResource);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public boolean delRoleResource(PowRoleResourceKey powRoleResource) throws Exception {
		int ret = this.powRoleResourceDao.deleteByPrimaryKey(powRoleResource);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public List<PowResource> selRoleResource(PowRoleResourceKey powRoleResource) throws Exception {
		return this.powRoleResourceDao.selectRoleResource(powRoleResource);
	}

	@Override
	public boolean addUserRole(PowUserRoleKey powUserRole) throws Exception {
		int ret = this.powUserRoleDao.insert(powUserRole);
		if (ret == 1) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public List<PowRole> selUserRole(PowUserRoleKey powUserRole) throws Exception {
		return this.powUserRoleDao.selectRoleByUser(powUserRole);
	}

	@Override
	public List<PowSysUser> selRoleUser(PowUserRoleKey powUserRole) throws Exception {
		return this.powUserRoleDao.selectUserByRole(powUserRole);
	}

	@Override
	public List<PowResource> selUserResource(PowSysUser powSysUser) throws Exception {
		return this.powSysUserDao.selectResourceByUser(powSysUser);
	}

	@Override
	public List<PowSysUser> selResourceUser(PowResource powResource) throws Exception {
		return this.powResourceDao.selectUserByResource(powResource);
	}

}
